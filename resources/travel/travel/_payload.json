[{"data":1,"prerenderedAt":192},["Reactive",2],{"search-api":3},[4,11,19,26,34,42,49,56,63,69,77,86,92,101,106,114,120,132,138,144,152,164,172,179,186],{"id":5,"path":6,"dir":7,"title":8,"description":7,"keywords":9,"body":10},"content:0.index.md","/","","Home",[],"     Aim Arena: Codebase Documentation Hub.    Aim Arena  is a multiplayer game mode for the   FiveM  platform, implemented using   Lua  and   TypeScript  with UI elements made in   ReactJS .      +32 Resources  ready to enhance in-game experience   Highly Optimized  with less than   500ms  overall resource consumption   +1GB  worth of in-game assets  Fully configurable design system  Fully custom logging system using   Discord  and   Datadog  Roles and Administration managed in   Real-Time  using   Discord  Player data stored securely using   MySQL  along with   HeidiSQL  &   JSON  Codebase with   +50,000  Files in   +6,000  Folders  Server Hosted on   Dedicated Indian Linux VPS         Zaid Ahmed   Skills Set:     Lua   TypeScript   MySQL   ReactJS   Codewalker         LinkedIn  |   Github      Siddharth Harshit   Skills Set:     Lua   MySQL   ReactJS   DiscordJS   Linux         LinkedIn \n|\n  Github      Daiwik Bhola   Skills Set:     Lua   TypeScript   MySQL   ReactJS         LinkedIn \n|\n  Github   Project Contributors  ",{"id":12,"path":13,"dir":14,"title":15,"description":7,"keywords":16,"body":18},"content:1.introduction:1.introduction.md","/introduction/introduction","introduction","Introduction",[17],"Tech-Stack Used:","  Introduction    Aim Arena is not just a server; it's an electrifying experience that immerses you in the thrilling world of GTA5. With intense PVP action and a vast, dynamic environment, every moment is packed with excitement. Whether you're racing through the streets or engaging in fierce shootouts, the adrenaline never stops flowing. Join us now and experience the ultimate PVP adventure in GTA5's Aim Arena!   \"The document doesn't necessarily provide information about every export, event, or function; it only focuses on the frequently used ones.\"   Socials:   Tech-Stack Used:    Reactjs ...    Lua ...    Typescript ...    MariaDB ...  ",{"id":20,"path":21,"dir":14,"title":22,"description":7,"keywords":23,"body":25},"content:1.introduction:2.team.md","/introduction/team","Team",[24],"Support our team","  Team  Support our team  Our projects will always remain free and open-source, with our core developers working voluntarily.:br\nIf you love what we do and want to help us continue, why not show your appreciation with a donation?       Zaid Ahmed   Skills Set:     Lua   TypeScript   MySQL   ReactJS   Codewalker         LinkedIn  |   Github      Siddharth Harshit   Skills Set:     Lua   MySQL   ReactJS   DiscordJS   Linux         LinkedIn \n|\n  Github      Daiwik Bhola   Skills Set:     Lua   TypeScript   MySQL   ReactJS         LinkedIn \n|\n  Github   Project Contributors  ",{"id":27,"path":28,"dir":14,"title":29,"description":30,"keywords":31,"body":33},"content:1.introduction:3.project-structure.md","/introduction/project-structure","Resource Structure","This is the minimal resource structure.",[32],"Fxmanifest.lua Template","  Resource Structure  This is the minimal resource structure.     [resourceName]/\n     [web]  /\n     [client]  /\n     [server]  /\n     [shared]  /\n   fxmanifest.lua\n  Fxmanifest.lua Template     fx_version   \"cerulean\"\n   description   \"\"\n   author   \"\"\n   version   \"\"\n   repository   \"\"\n   lua54   \"yes\"\n   game   \"gta5\"\n   \n   ui_page   \"web/build/index.html\"\n   \n   server_script   \"server/**/*\"\n   shared_script   \"shared/**/*\"\n   client_script   \"client/**/*\"\n   \n   files   {\n       'web/build/**/*'  ,\n   }\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":35,"path":36,"dir":37,"title":38,"description":39,"keywords":40,"body":41},"content:2.api:1.git.md","/api/git","api","Git","Git is a version control system, allowing changes to be effectively tracked, merged, and reverted.",[],"  Git  Git is a version control system, allowing changes to be effectively tracked, merged, and reverted.  As our resources are hosted on GitHub, it can be incredibly useful to learn how to create your own repository to track changes and keep up-to-date. If you plan on making your own changes to our resources, this will allow you to keep your own changes and prevent loss of data.   Refer to   GitHub's guide to setting up Git .  You can use a Git GUI client like   GitKraken  to improve your workflow and more easily maintain changes.",{"id":43,"path":44,"dir":37,"title":45,"description":46,"keywords":47,"body":48},"content:2.api:2.nodejs.md","/api/nodejs","Node.js","Node.js is a JavaScript runtime and is used for building applications. In the context of FiveM it is necessary to bundle resources into a single package that can be ran on both the server and client.",[],"  Node.js  Node.js is a JavaScript runtime and is used for building applications. In the context of FiveM it is necessary to bundle resources into a single package that can be ran on both the server and client.    Download  and install the LTS version of Node.js.  Open a command-line terminal (e.g. Terminal, Command Prompt).  Enter   node --version  to confirm successful installation.",{"id":50,"path":51,"dir":37,"title":52,"description":53,"keywords":54,"body":55},"content:2.api:3.pnpm.md","/api/pnpm","pnpm","pnpm is a fast and disk space efficient package manager, serving as an alternative to npm and yarn.",[],"  pnpm  pnpm is a fast and disk space efficient package manager, serving as an alternative to npm and yarn.   Ensure you have   installed Node.js .  Open a command-line terminal (e.g. Terminal, Command Prompt).  Enter   npm install -g pnpm  to globally install the package.  You can install dependencies with pnpm using   pnpm i .  You can reference   package.json  files for available scripts, i.e.     \"scripts\"  : {\n     \"start\"  :   \"vite\"  ,\n     \"watch\"  :   \"vite build --watch\"  ,\n     \"build\"  :   \"tsc && vite build\"  ,\n     \"preview\"  :   \"vite preview\"  ,\n     \"format\"  :   \"prettier --write   \\\"  ./src/**/*.{ts,tsx,css}  \\\"  \"\n   },\n  Using the example above   pnpm build  will run the build script for the given package.  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":57,"path":58,"dir":37,"title":59,"description":60,"keywords":61,"body":62},"content:2.api:4.ox.md","/api/ox","Overextended","Their projects will always remain free and open-source, with their core developers working voluntarily. If you love what they do and want to help them continue, why not show your appreciation with a donation?",[],"  Overextended  Their projects will always remain free and open-source, with their core developers working voluntarily. If you love what they do and want to help them continue, why not show your appreciation with a donation?  Resources Used:     ox_core   ox_lib   ox_inventory   ox_appearance   oxmysql  Socials:     Discord  ...     Github  ...     Documentation  ...  ",{"id":64,"path":65,"dir":66,"title":15,"description":7,"keywords":67,"body":68},"content:3.resources:aim_vehspawn:aim_vehiclespawn.md","/resources/aim_vehspawn/aim_vehiclespawn","aim_vehspawn",[],"  Introduction",{"id":70,"path":71,"dir":72,"title":73,"description":7,"keywords":74,"body":76},"content:3.resources:aim_vehspawn:client:events.md","/resources/aim_vehspawn/client/events","client","Events",[75],"Last Vehicle","  Events  Last Vehicle  Spawns player last vehicle.     TriggerEvent  (  'aim_vehspawn:lastveh'  )\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":78,"path":79,"dir":72,"title":80,"description":7,"keywords":81,"body":85},"content:3.resources:aim_vehspawn:client:functions.md","/resources/aim_vehspawn/client/functions","Functions",[82,83,84],"CarSpawn","GetVehicleProp","SetVehicleProp","  Functions  CarSpawn  Spawn player vehicle taking vehicle hash code as input.     carspawn  (vehiclehash, inDatabase, carProps)\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Key   Type     vehiclehash   number    inDatabase   boolean    carProps   table  GetVehicleProp  Returns vehicle custom in a table.     GetVehicleProp  (vehicle)\n  SetVehicleProp  Set vehicle customization taking vehicle code and props as table.     SetVehicleProp  (vehicle, props)\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":87,"path":88,"dir":72,"title":73,"description":7,"keywords":89,"body":91},"content:3.resources:crew:client:events.md","/resources/crew/client/events",[90],"Black Screen Trigger","  Events  Black Screen Trigger  Triggers a black screen when activated.     TriggerEven  (  'Crew:BlindPlayer'  , boolean)\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":93,"path":94,"dir":72,"title":80,"description":7,"keywords":95,"body":100},"content:3.resources:crew:client:function.md","/resources/crew/client/function",[96,97,98,99],"Position Screen","Array Search","Message Contains","JSON Data Management","  Functions  Position Screen  Converts 3D world coordinates to 2D screen coordinates.     World3DToScreen2D  (pos)\n  Array Search  Searches for a value in an array and returns its index if found.     findValueinArray  (table, value)\n  Message Contains  Checks if a message contains a specific substring.     msgcontains  (msg, what)\n  JSON Data Management  These Lua functions seem to be used for managing data in JSON files within a FiveM resource. They provide functionality to get, add, delete, and replace items in a JSON file. Here's a summary of each function:     GetFile  (filename)   --Reads and returns the entire JSON file's contents as a Lua table.\n   GetItem  (filename, itemname)  -- Reads the JSON file and returns the value of a specific item.\n   AddItem  (filename, itemname, itemcontent)  -- Adds a new item to the JSON file or updates an existing one.\n   DeleteItem  (filename, itemname)  -- Deletes a specific item from the JSON file.\n   ReplaceItem  (filename, itemname, itemcontent)  -- Replaces the value of a specific item in the JSON file.\n  These functions are useful for dynamically managing data in a JSON format within a FiveM resource.  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":102,"path":103,"dir":104,"title":15,"description":7,"keywords":105,"body":68},"content:3.resources:crew:introduction.md","/resources/crew/introduction","crew",[],{"id":107,"path":108,"dir":109,"title":110,"description":7,"keywords":111,"body":113},"content:3.resources:crew:server:exports.md","/resources/crew/server/exports","server","Exports",[112],"XP to Level","  Exports  XP to Level  Converts XP points to the corresponding level.     GetLevelFromXP   =   function  (_xp)\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":115,"path":116,"dir":117,"title":15,"description":7,"keywords":118,"body":119},"content:3.resources:Discord:1.introduction.md","/resources/discord/introduction","discord",[]," ",{"id":121,"path":122,"dir":72,"title":80,"description":7,"keywords":123,"body":131},"content:3.resources:Discord:client:functions.md","/resources/discord/client/functions",[124,125,126,127,128,129,130],"Role ID from Role Name","Fetch Role ID","Check Discord Email Verification","Fetch Discord Name","Fetch Discord Avatar","Fetch Discord Roles","Check Role Presence","  Functions  Role ID from Role Name  Retrieves the role ID corresponding to the given role name.     GetRoleIdFromRoleName  (roleName)\n  Fetch Role ID  Retrieves the role ID corresponding to the given role name.     FetchRoleID  (roleName)\n  Check Discord Email Verification  Checks if the user's Discord email is verified.     IsDiscordEmailVerified  (userID)\n  Fetch Discord Name  Retrieves the Discord name of the user with the specified ID.     GetDiscordName  (userID)\n  Fetch Discord Avatar  Retrieves the avatar URL of the user with the specified ID.     GetDiscordAvatar  (userID)\n  Fetch Discord Roles  Retrieves the roles associated with the user with the specified ID.     GetDiscordRoles  (userID)\n  Check Role Presence  Checks if the user with the specified ID has the given role.     IsRolePresent  (userID, roleName)\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":133,"path":134,"dir":109,"title":110,"description":7,"keywords":135,"body":137},"content:3.resources:Discord:server:exports.md","/resources/discord/server/exports",[136],"Discord Server API","  Exports  Discord Server API  Exports various functions for interacting with Discord server and user information.     server_exports   { \n       -- Retrieves the roles associated with a Discord user.\n       \"GetDiscordRoles\"  ,\n   \n       -- Retrieves the role ID from the role name.\n       \"GetRoleIdFromRoleName\"  ,\n   \n       -- Retrieves the avatar URL of a Discord user.\n       \"GetDiscordAvatar\"  ,\n   \n       -- Retrieves the username of a Discord user.\n       \"GetDiscordName\"  ,\n   \n       -- Retrieves the email of a Discord user.\n       \"GetDiscordEmail\"  ,\n   \n       -- Checks if the email of a Discord user is verified.\n       \"IsDiscordEmailVerified\"  ,\n   \n       -- Retrieves the nickname of a Discord user.\n       \"GetDiscordNickname\"  ,\n   \n       -- Retrieves the icon URL of a Discord server.\n       \"GetGuildIcon\"  ,\n   \n       -- Retrieves the splash URL of a Discord server.\n       \"GetGuildSplash\"  ,\n   \n       -- Retrieves the name of a Discord server.\n       \"GetGuildName\"  ,\n   \n       -- Retrieves the description of a Discord server.\n       \"GetGuildDescription\"  ,\n   \n       -- Retrieves the total member count of a Discord server.\n       \"GetGuildMemberCount\"  ,\n   \n       -- Retrieves the online member count of a Discord server.\n       \"GetGuildOnlineMemberCount\"  ,\n   \n       -- Retrieves a list of roles in a Discord server.\n       \"GetGuildRoleList\"  ,\n   \n       -- Resets the cache used for Discord data.\n       \"ResetCaches\"  ,\n   \n       -- Checks if two values are equal.\n       \"CheckEqual\"  ,\n   \n       -- Sets the nickname of a Discord user.\n       \"SetNickname\"  ,\n   \n       -- Sets the roles of a Discord user.\n       \"SetRoles\"  ,\n   \n       -- Adds a role to a Discord user.\n       \"AddRole\"  ,\n   \n       -- Removes a role from a Discord user.\n       \"RemoveRole\"  ,\n   \n       -- Changes the voice channel of a Discord user.\n       \"ChangeDiscordVoice\"  ,\n   \n       -- Clears the cache for a specific Discord user.\n       \"ClearCache\"  ,\n   \n       -- Fetches the role ID of a specified role.\n       \"FetchRoleID\"\n   }\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":139,"path":140,"dir":141,"title":15,"description":7,"keywords":142,"body":143},"content:3.resources:travel:1.travel.md","/resources/travel/travel","travel",[],"  Introduction  Features     Player Playtime Tracking:  Records player playtime and stores it in a MySQL database for tracking and analysis.\nBuilt-in Functions: Includes a variety of in-built functions such as checking \"distance in array\", spawning peds, generating scaleforms, calculating KD ratio, and giving weapons to players.   Private Sessions:  Allows for the creation of private sessions with customizable features, including session settings and access control.   Joining Private Sessions:  Players can join private sessions either by invite or by entering credentials provided by the session creator.   Multiple Game Modes:  Offers a range of game modes including \"driveby\", \"semi-driveby\", \"fpp-driveby\", \"gungame\", \"mayhem\", \"bikes only\", \"redzone\", and more.   Inventory Management:  Manages different inventories for different lobbies, allowing for a customized gameplay experience.   Unique Routing Bucket:  Assigns a unique routing bucket for every lobby, ensuring smooth and efficient gameplay.   Resupply Option:  Provides a resupply option for suitable lobbies, allowing players to replenish their resources during gameplay.   Profile Page:  Displays player statistics such as kills, deaths, KD ratio, mayhem points, and playtime on a profile page.   Ped Menu:  Allows donators to change their ped, providing a unique appearance in-game.   Configurable Map Setup:  Utilizes Lua tables for configuring maps and game modes, offering flexibility and customization options.   Kill Manager:  Manages kill and death events, ensuring fair gameplay and accurate scoring.   Kill Feed:  Provides a kill feed linked lobby-wise, allowing players to see recent kills and deaths in their lobby.   Vehicle Management:  Automatically deletes empty and unused vehicles, maintaining a clean and optimized game environment.   Discord Integration:  Integrates with Discord to display a leaderboard showing the top 10 players according to kills and server status showing the number of people in different lobbies.   Anti-Cheat System:  Implements an anti-cheat system that detects client-side modifications and injections, ensuring fair gameplay.   Vehicle Permissions:  Allows donators to use specific vehicles, adding a level of customization for donors.   Weapon Loadout:  Restricts users to holster specific weapons in certain lobbies, ensuring balanced gameplay.   Traffic Configuration:  Provides an option to configure in-game traffic, allowing for a more dynamic gameplay experience.   Safezones:  Creates safe zones in required lobbies, providing a refuge for players in dangerous areas.   Radial Menu:  Controls most events using a radial menu, simplifying gameplay and reducing the need for commands.   No-Collision:  Enables no-collision for player-to-player and player-to-vehicle interactions in required lobbies, preventing accidental collisions.   Spawn Last Used Vehicles:  Spawns the last used vehicles in vehicle lobbies, providing convenience for players.   Force Vehicle in Driveby Lobbies:  Forces players to use vehicles while on-foot in driveby lobbies, enhancing the gameplay experience.   Clothing Menu:  Allows players to customize their clothing, adding a personal touch to their character.   Time and Weather Control:  Allows players to change the time and weather client-side, adding a layer of immersion to the gameplay.   Admin Commands:  Provides admin commands such as god mode, names, and invisibility for managing the server and ensuring fair gameplay.  Resource Usage  ",{"id":145,"path":146,"dir":141,"title":147,"description":7,"keywords":148,"body":151},"content:3.resources:travel:2.configuration.md","/resources/travel/configuration","Configuration",[149,150],"Map Configuration","Gamemode Configuration","  Configuration  Map Configuration      [  'map_code'  ]   =   {\n           coords   =   {\n             vec4  ()\n           },\n           DiscordPresence   =   'Gamemode/Map Name'  ,\n           GameCam_Heading   =   ,\n           resupplyPoints   =   {\n             vec4  (),\n           },\n           safeZoneType   =   'PolyZone | CircleZone'  ,\n           safeZone_Radius   =   float value,   --works only if type is CircleZone\n           safeZone   =   {},\n           secondaryLocation   =   {\n             From   =   vec4  (),\n             To   =   vec4  (),\n           }\n       },\n  Gamemode Configuration     dataGamemodes   =   {\n       [  'casualLobby'  ]   =   {\n           itemsTable   =   {\n             [  1  ]   =   {name   =   'item_name'  },\n           },\n           excludedItems   =   {\n             [  1  ]   =   {name   =   'item_name'  },\n           },\n       },\n       [  'mayhem'  ]   =   {\n         Rewards   =   {\n           LowTierValue   =   30  ,\n           [  'LowTierRewards'  ]   =   {\n             [  1  ]   =   {name   =   'item_name'  },\n           },\n           MediumTierValue   =   60  , \n           [  'MediumTierRewards'  ]   =   {\n             [  1  ]   =   {name   =   'item_name'  },\n           },\n           HighTierValue   =   90  ,\n           [  'HighTierRewards'  ]   =   {\n             [  1  ]   =   {name   =   'item_name'  },\n           },\n           ResetValue   =   100  ,\n         },\n         zombiesModel   =   {\n           'npc_model'  ,\n         },\n         zombiesMaximum   =   20  ,   --maximum zombie spawn per minute\n         zombiesMinimum   =   5  ,   --minimum zombie spawn per minute \n       },\n       [  'bikesonly'  ]   =   {\n           vehiclesList   =   {  \n             'spawn_code'  ,\n           },\n           spawnProtection   =   5  ,   --seconds\n           bikeTimer   =   5  ,   -- seconds\n       },\n       \n       [  'db_targetzone'  ]   =   {\n           NPC   =   {{name   =   \"enemies\"  , model   =   \"npc_mode\"  , weapon   =   \"weapon_code\"  }},\n           VehList   =   {\n             'spawn_code'  ,\n           },\n           PlayerSpawn   =   vec4  (),\n           NPCSpawn   =   vec4  ()\n       },\n   }\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":153,"path":154,"dir":72,"title":80,"description":7,"keywords":155,"body":163},"content:3.resources:travel:3.client:1.functions.md","/resources/travel/client/functions",[156,157,158,159,160,161,162],"SwitchLobby","giveWeapon","generateKD","LoadModel","DeletePed","removeByValue","getRandomCoordsAroundPlayer","  Functions  SwitchLobby  Takes table as an input and switches client lobby according to the table data.     SwitchLobby  (table)\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Key   Type     gamemode   string    generalShopType   string    map   string    privateLobby   boolean    recoil   string    drivebyEnabled   boolean    safezone   boolean    headshot   boolean    leaderboard   boolean    crewStats   boolean    routingbucket   number    routingbucket2   number    killsafeZone   boolean    noinventory   boolean    blips   boolean    vehmenu   boolean    resupply   boolean    forceVehicle   boolean    traffic   boolean    sprintSpeed   float    arfix   boolean    vehicleWhitelist   boolean    shopAmmunation   string    noCollision   boolean    randomWeapon   boolean    isSiphon   boolean    quickSwitch   boolean    NPCdamage   boolean    cacheLeaderboard   boolean    enableCrouch   boolean    weaponLoadout   string  giveWeapon  Instantly gives weapon with infinite ammo to player by taking weapon name as argument.     giveWeapon  (weaponName)\n  generateKD  Generates KD Ratio of player by taking kills, deaths as argument.     generateKD  (kills, death)\n  LoadModel  Using \"while-loop\" loads the model in the argument. Useful in spawning NPCs.     LoadModel  (model)\n  DeletePed  Deletes the NPC model in the argument.     DeletePed  (model)\n  removeByValue  Removes element in table by its value rather than index.Takes table and value as arguments.     removeByValue  (table, value)\n  getRandomCoordsAroundPlayer  Return randomly generated coords around player.It also calculates \"z-axis\" around player so coords don't end up inside land or up in the sky.     getRandomCoordsAroundPlayer  ()\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":165,"path":166,"dir":72,"title":110,"description":7,"keywords":167,"body":171},"content:3.resources:travel:3.client:2.exports.md","/resources/travel/client/exports",[168,169,170],"util_giveLobbyDetail","weaponCheck","checkVehicleWhitelist","  Exports  util_giveLobbyDetail  Returns lobby data of client as an array which can further be used to perform actions.     exports[  \"travel\"  ]:  util_giveLobbyDetail  ()\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          Key   Type    gamemode   string    generalShopType   string    map   string    privateLobby   boolean    recoil   string    drivebyEnabled   boolean    safezone   boolean    headshot   boolean    leaderboard   boolean    crewStats   boolean    routingbucket   number    routingbucket2   number    killsafeZone   boolean    noinventory   boolean    blips   boolean    vehmenu   boolean    resupply   boolean    forceVehicle   boolean    traffic   boolean    sprintSpeed   float    arfix   boolean    vehicleWhitelist   boolean    shopAmmunation   string    noCollision   boolean    randomWeapon   boolean    isSiphon   boolean    quickSwitch   boolean    NPCdamage   boolean    cacheLeaderboard   boolean    enableCrouch   boolean    weaponLoadout   string  weaponCheck  This export checks if the weapon passed as an argument is blocked in the current lobby. If the player is holding a blocked weapon, it unarms them.     exports[  \"travel\"  ]:  weaponCheck  (weaponHash)\n  checkVehicleWhitelist  This export checks if the vehicle passed as an argument is blocked in the current lobby. If the player is in a blocked vehicle, it delete it.     exports[  \"travel\"  ]:  checkVehicleWhitelist  (vehicleHash)\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":173,"path":174,"dir":72,"title":73,"description":7,"keywords":175,"body":178},"content:3.resources:travel:3.client:3.events.md","/resources/travel/client/events",[176,177],"Scaleform","Stats Reset","  Events  Scaleform  Display scaleform using   fivem-scaleform-lib     TriggerEvent  (  'tpmenu:util:scaleform'   senderGamemode, typeS, text, subtext, id, sound)\n  Stats Reset  Resets player kills, deaths, kd, points, rounds.     TriggerEvent  (  'travel:killManager:showReset'  )\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":180,"path":181,"dir":109,"title":80,"description":7,"keywords":182,"body":185},"content:3.resources:travel:4.server:1.functions.md","/resources/travel/server/functions",[183,184],"Steam license to Fivem Name","MilliSeconds to clock","  Functions  Steam license to Fivem Name  This function takes player license2 as argument and returns FiveM name.     License2Username  (license2)\n  MilliSeconds to clock  This function takes MilliSeconds as argument and returns it in clock format (hh-mm-ss).     MilliSecondsToClock  (clock)\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":187,"path":188,"dir":109,"title":73,"description":7,"keywords":189,"body":191},"content:3.resources:travel:4.server:2.events.md","/resources/travel/server/events",[190],"Change Routing","  Events  Change Routing  This event changes player routing bucket if second argument is   null   then it switches routing bucket to first argument if both arguments are given then it generates a random routing bucket which is empty has no other existing player.     TriggerEvent  (  'tpmenu:changerouting'  , args1, args2)\n  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",1713080010948]